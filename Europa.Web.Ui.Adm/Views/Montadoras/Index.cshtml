@model IEnumerable<Europa.Dao.Montadora>
@using GridMvc.Html
@{
    ViewBag.Title = "Montadora";
}
<div class="container-fluid">
    <h2>Lista de  Montadora</h2>

    @Html.Partial("BuscaMontadora", Model)

</div>
<br /><br />
@Html.Grid(Model).Columns(columns =>
{
    /* Adding not mapped column, that renders body, using inline Razor html helper */


    /* Adding "OrderID" column: */
    columns.Add(m => m.Nome)
            .Titled("Nome")
            .SetWidth(100);

    columns.Add()
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(m =>
            @<b>
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" data-id="@m.IdMontadora">

                    Carregar imagem
                </button>
            </b>);

    columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(m =>
                @<b>
                    @Html.ActionLink("Editar", "Edit", new { id = m.IdMontadora }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = m.IdMontadora }) |
                    @Html.ActionLink("Deletar", "Delete", new { id = m.IdMontadora })
                </b>);

}).WithPaging(15).Sortable()

<script>


    $("button").click(function () {
        var idMontadora = $(this).data("id");
        var urlCompleta = window.location.href;
        var n = urlCompleta.indexOf("Montadoras");
        var urlCortada = urlCompleta.substr(0, n);
        var url = urlCortada + "Montadoras/AlterarImagem/" + idMontadora;
        BootstrapDialog.show({
           
            title: 'Imagem',
            buttons: [{
                label: 'Fechar',
                action: function (dialogRef) {
                    dialogRef.close();
                }
            }],
            message: $('<iframe src="' + url + '" width="500" height="400" frameborder="0" allowtransparency="true"></iframe>')
        });

    })
</script>
